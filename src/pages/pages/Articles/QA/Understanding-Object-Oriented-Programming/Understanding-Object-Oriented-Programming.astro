---
import ArticleLayout from "../../../../../layouts/ArticleLayout.astro";
---

<ArticleLayout
  title="Practice: Understanding Object-Oriented Programming | SDTL3 A2.1"
  date="04/07/2022"
  time="14:22pm"
  streamID="633ec855c6bdedc1a0812586"
>
  <div class="article__section">
    <h2>My IDE</h2>

    <div class="article__image">
      <img src="../img/ide.png" alt="" class="articleImg" />
      <p>I am using the Eclipse IDE by IBM.</p>
    </div>

    <div class="article__section">
      <p>
        I have decided to create a fighting game where players can be damaged, healed and when all health is lost the
        game ends.
      </p>
      <p>Certain players can have shields to help them take less damage.</p>
    </div>

    <div class="article__image article__image-thin">
      <img src="../img/program.png" alt="" class="articleImg" />
      <p>An image of my program running and the main method.</p>
    </div>

    <div class="article__section">
      <p>
        The class contains a constructor that is used to set the values of the variables, methods to deal damage: either
        simple damage or critical damage and getter/setter methods to retrieve data from the player class.
      </p>
      <p>
        The image below shows the base class a player, this will be used by other classes to inherit the base
        functionality.
      </p>
    </div>

    <div class="article__image article__image-thin">
      <img src="../img/carbon(1).png" alt="" class="articleImg" />
      <p>An image of the base Player class.</p>
    </div>

    <div class="article__section">
      <p>I then created another class for a player with a shield equipped.</p>
      <p>
        This class inherited the base functionality of the player class, but the damage and critical methods have been
        overridden with a lower damage value.
      </p>

      <p>I have added a super method to the constructor so the values in the parent class can be changed.</p>
    </div>

    <div class="article__image article__image-thin">
      <img src="../img/carbon(2).png" alt="" class="articleImg" />
      <p>An image of the Player with Shield class.</p>
    </div>

    <div class="article__section">
      <h2>What OOP means to me</h2>
      <p>
        I have learned that OOP is a way of ensuring that you don’t have to constantly repeat lines of code or functions
        to work on a set of data.
      </p>
      <p>
        It seems to be a better approach to the old way of writing multiple functions that change variables which can
        end up being messy or ‘spaghetti code’.
      </p>

      <h2>OOP at work</h2>

      <p>Recently in work I have been working with C# to create a login audit API.</p>
      <p>
        I have used many object-oriented programming concepts such as using interfaces to abstract my code, using
        getter/setter classes to store data in a structured way.
      </p>
      <p>
        I have then used the entity framework in .Net to pull data from a database and return the results as a JSON
        result with multiple API endpoints.
      </p>
      <p>
        I want to learn more about interfaces in C# and how they can abstract the functionality of my programs and make
        it easier for other developers to work on my program.
      </p>

      <h2>What i'm learning</h2>
      <p>
        I have recently learned about how to use OOP and the MVC pattern to create components that use data and update
        data sources and then render the data within a view.
      </p>
      <p>I have used this in some of my own projects/challenges I have worked on.</p>
      <p>
        I am looking forward to practicing OOP in JavaScript as I see it as a much better way of working with a
        collection of data and maintaining the state of an application.
      </p>
    </div>
  </div>
</ArticleLayout>
