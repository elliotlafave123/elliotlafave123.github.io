(()=>{"use strict";var __webpack_modules__={9972:(__unused_webpack_module,exports)=>{eval('\r\nObject.defineProperty(exports, "__esModule", ({ value: true }));\r\nexports.createBreadcrumb = void 0;\r\nconst breadcrumbNav = document.getElementById("breadcrumbNav");\r\nlet resizeTimeout = null;\r\nfunction createBreadcrumb() {\r\n    var _a;\r\n    const pathnames = window.location.pathname.split("/").filter((x) => x);\r\n    // If you\'re on the homepage, exit early and remove the parent div if it has class \'c-container\'.\r\n    if (pathnames.length === 0 ||\r\n        (pathnames.length === 1 && (pathnames[0] === "index.html" || pathnames[0] === "index"))) {\r\n        if ((_a = breadcrumbNav === null || breadcrumbNav === void 0 ? void 0 : breadcrumbNav.parentElement) === null || _a === void 0 ? void 0 : _a.classList.contains("c-container")) {\r\n            breadcrumbNav.parentElement.remove();\r\n        }\r\n        return;\r\n    }\r\n    // Append the items normally first\r\n    appendBreadcrumbItems(pathnames);\r\n    // Use a promise to delay checking of wrapping\r\n    Promise.resolve().then(() => {\r\n        // Check if wrapping occurred\r\n        const afterAppendHeight = (breadcrumbNav === null || breadcrumbNav === void 0 ? void 0 : breadcrumbNav.offsetHeight) || 0;\r\n        if (afterAppendHeight > 30) {\r\n            breadcrumbNav.innerHTML = ""; // Clear the breadcrumbNav\r\n            appendReducedBreadcrumbItems(pathnames);\r\n        }\r\n    });\r\n    window.addEventListener("resize", handleResize);\r\n}\r\nexports.createBreadcrumb = createBreadcrumb;\r\nfunction handleResize() {\r\n    // If there\'s an existing timeout, clear it\r\n    if (resizeTimeout !== null) {\r\n        clearTimeout(resizeTimeout);\r\n    }\r\n    // Set a new timeout\r\n    resizeTimeout = setTimeout(() => {\r\n        const afterAppendHeight = (breadcrumbNav === null || breadcrumbNav === void 0 ? void 0 : breadcrumbNav.offsetHeight) || 0;\r\n        if (afterAppendHeight > 26) {\r\n            breadcrumbNav.innerHTML = ""; // Clear the breadcrumbNav\r\n            appendReducedBreadcrumbItems(window.location.pathname.split("/").filter((x) => x));\r\n        }\r\n    }, 300); // 300ms delay\r\n}\r\nfunction appendBreadcrumbItems(pathnames) {\r\n    // Always append the "Home" breadcrumb item\r\n    const homeBreadcrumb = document.createElement("a");\r\n    homeBreadcrumb.href = "/";\r\n    homeBreadcrumb.textContent = "Home";\r\n    breadcrumbNav === null || breadcrumbNav === void 0 ? void 0 : breadcrumbNav.appendChild(homeBreadcrumb);\r\n    const dividerHome = document.createElement("span");\r\n    dividerHome.className = "divider";\r\n    dividerHome.innerHTML = `<i class="fas fa-chevron-right"></i>`;\r\n    breadcrumbNav === null || breadcrumbNav === void 0 ? void 0 : breadcrumbNav.appendChild(dividerHome);\r\n    let fullPath = "";\r\n    // If there are 5 segments in the path, remove the second to last\r\n    if (pathnames.length === 5) {\r\n        pathnames.splice(-2, 1);\r\n    }\r\n    for (let i = 0; i < pathnames.length; i++) {\r\n        const isLastItem = i === pathnames.length - 1;\r\n        fullPath += "/" + pathnames[i];\r\n        const displayName = decodeURIComponent(pathnames[i].replace(".html", ""));\r\n        let breadcrumbItem;\r\n        if (isLastItem) {\r\n            breadcrumbItem = document.createElement("span");\r\n        }\r\n        else {\r\n            breadcrumbItem = document.createElement("a");\r\n            breadcrumbItem.href = fullPath;\r\n        }\r\n        breadcrumbItem.textContent = displayName;\r\n        breadcrumbNav === null || breadcrumbNav === void 0 ? void 0 : breadcrumbNav.appendChild(breadcrumbItem);\r\n        // If not the last item, append the chevron\r\n        if (!isLastItem) {\r\n            const divider = document.createElement("span");\r\n            divider.className = "divider";\r\n            divider.innerHTML = `<i class="fas fa-chevron-right"></i>`;\r\n            breadcrumbNav === null || breadcrumbNav === void 0 ? void 0 : breadcrumbNav.appendChild(divider);\r\n        }\r\n    }\r\n}\r\nfunction appendReducedBreadcrumbItems(pathnames) {\r\n    if (pathnames.length <= 2)\r\n        return appendBreadcrumbItems(pathnames);\r\n    // Append "Home"\r\n    const homeBreadcrumb = document.createElement("a");\r\n    homeBreadcrumb.href = "/";\r\n    homeBreadcrumb.textContent = "Home";\r\n    breadcrumbNav === null || breadcrumbNav === void 0 ? void 0 : breadcrumbNav.appendChild(homeBreadcrumb);\r\n    // Append divider before "..."\r\n    const dividerBeforeEllipsis = document.createElement("span");\r\n    dividerBeforeEllipsis.className = "divider";\r\n    dividerBeforeEllipsis.innerHTML = `<i class="fas fa-chevron-right"></i>`;\r\n    breadcrumbNav === null || breadcrumbNav === void 0 ? void 0 : breadcrumbNav.appendChild(dividerBeforeEllipsis);\r\n    // Append "..."\r\n    const ellipsis = document.createElement("span");\r\n    ellipsis.textContent = "...";\r\n    breadcrumbNav === null || breadcrumbNav === void 0 ? void 0 : breadcrumbNav.appendChild(ellipsis);\r\n    // Append divider after "..."\r\n    const dividerAfterEllipsis = document.createElement("span");\r\n    dividerAfterEllipsis.className = "divider";\r\n    dividerAfterEllipsis.innerHTML = `<i class="fas fa-chevron-right"></i>`;\r\n    breadcrumbNav === null || breadcrumbNav === void 0 ? void 0 : breadcrumbNav.appendChild(dividerAfterEllipsis);\r\n    // Append second-to-last item as a link\r\n    const secondLastItem = document.createElement("a");\r\n    secondLastItem.href = `/${pathnames.slice(0, -1).join("/")}`;\r\n    secondLastItem.textContent = decodeURIComponent(pathnames[pathnames.length - 2].replace(".html", ""));\r\n    breadcrumbNav === null || breadcrumbNav === void 0 ? void 0 : breadcrumbNav.appendChild(secondLastItem);\r\n    // Append divider\r\n    const divider = document.createElement("span");\r\n    divider.className = "divider";\r\n    divider.innerHTML = `<i class="fas fa-chevron-right"></i>`;\r\n    breadcrumbNav === null || breadcrumbNav === void 0 ? void 0 : breadcrumbNav.appendChild(divider);\r\n    // Append last item\r\n    const lastItem = document.createElement("span");\r\n    lastItem.textContent = decodeURIComponent(pathnames[pathnames.length - 1].replace(".html", ""));\r\n    breadcrumbNav === null || breadcrumbNav === void 0 ? void 0 : breadcrumbNav.appendChild(lastItem);\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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LEdBQUcsQ0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDLE9BQU8sRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDO0lBQ2hHLGFBQWEsYUFBYixhQUFhLHVCQUFiLGFBQWEsQ0FBRSxXQUFXLENBQUMsUUFBUSxDQUFDLENBQUM7QUFDdkMsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL0BleGFtcGxlL2Jhc2ljcy8uL3NyYy9UeXBlU2NyaXB0L2NvbXBvbmVudHMvQnJlYWRjcnVtYi9icmVhZGNydW1iLnRzP2ZiYWIiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgYnJlYWRjcnVtYk5hdiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiYnJlYWRjcnVtYk5hdlwiKTtcclxuXHJcbmxldCByZXNpemVUaW1lb3V0OiBSZXR1cm5UeXBlPHR5cGVvZiBzZXRUaW1lb3V0PiB8IG51bGwgPSBudWxsO1xyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUJyZWFkY3J1bWIoKSB7XHJcbiAgY29uc3QgcGF0aG5hbWVzID0gd2luZG93LmxvY2F0aW9uLnBhdGhuYW1lLnNwbGl0KFwiL1wiKS5maWx0ZXIoKHgpID0+IHgpO1xyXG5cclxuICAvLyBJZiB5b3UncmUgb24gdGhlIGhvbWVwYWdlLCBleGl0IGVhcmx5IGFuZCByZW1vdmUgdGhlIHBhcmVudCBkaXYgaWYgaXQgaGFzIGNsYXNzICdjLWNvbnRhaW5lcicuXHJcbiAgaWYgKFxyXG4gICAgcGF0aG5hbWVzLmxlbmd0aCA9PT0gMCB8fFxyXG4gICAgKHBhdGhuYW1lcy5sZW5ndGggPT09IDEgJiYgKHBhdGhuYW1lc1swXSA9PT0gXCJpbmRleC5odG1sXCIgfHwgcGF0aG5hbWVzWzBdID09PSBcImluZGV4XCIpKVxyXG4gICkge1xyXG4gICAgaWYgKGJyZWFkY3J1bWJOYXY/LnBhcmVudEVsZW1lbnQ/LmNsYXNzTGlzdC5jb250YWlucyhcImMtY29udGFpbmVyXCIpKSB7XHJcbiAgICAgIGJyZWFkY3J1bWJOYXYucGFyZW50RWxlbWVudC5yZW1vdmUoKTtcclxuICAgIH1cclxuICAgIHJldHVybjtcclxuICB9XHJcblxyXG4gIC8vIEFwcGVuZCB0aGUgaXRlbXMgbm9ybWFsbHkgZmlyc3RcclxuICBhcHBlbmRCcmVhZGNydW1iSXRlbXMocGF0aG5hbWVzKTtcclxuXHJcbiAgLy8gVXNlIGEgcHJvbWlzZSB0byBkZWxheSBjaGVja2luZyBvZiB3cmFwcGluZ1xyXG4gIFByb21pc2UucmVzb2x2ZSgpLnRoZW4oKCkgPT4ge1xyXG4gICAgLy8gQ2hlY2sgaWYgd3JhcHBpbmcgb2NjdXJyZWRcclxuICAgIGNvbnN0IGFmdGVyQXBwZW5kSGVpZ2h0ID0gYnJlYWRjcnVtYk5hdj8ub2Zmc2V0SGVpZ2h0IHx8IDA7XHJcblxyXG4gICAgaWYgKGFmdGVyQXBwZW5kSGVpZ2h0ID4gMzApIHtcclxuICAgICAgYnJlYWRjcnVtYk5hdi5pbm5lckhUTUwgPSBcIlwiOyAvLyBDbGVhciB0aGUgYnJlYWRjcnVtYk5hdlxyXG4gICAgICBhcHBlbmRSZWR1Y2VkQnJlYWRjcnVtYkl0ZW1zKHBhdGhuYW1lcyk7XHJcbiAgICB9XHJcbiAgfSk7XHJcblxyXG4gIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKFwicmVzaXplXCIsIGhhbmRsZVJlc2l6ZSk7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGhhbmRsZVJlc2l6ZSgpIHtcclxuICAvLyBJZiB0aGVyZSdzIGFuIGV4aXN0aW5nIHRpbWVvdXQsIGNsZWFyIGl0XHJcbiAgaWYgKHJlc2l6ZVRpbWVvdXQgIT09IG51bGwpIHtcclxuICAgIGNsZWFyVGltZW91dChyZXNpemVUaW1lb3V0KTtcclxuICB9XHJcblxyXG4gIC8vIFNldCBhIG5ldyB0aW1lb3V0XHJcbiAgcmVzaXplVGltZW91dCA9IHNldFRpbWVvdXQoKCkgPT4ge1xyXG4gICAgY29uc3QgYWZ0ZXJBcHBlbmRIZWlnaHQgPSBicmVhZGNydW1iTmF2Py5vZmZzZXRIZWlnaHQgfHwgMDtcclxuXHJcbiAgICBpZiAoYWZ0ZXJBcHBlbmRIZWlnaHQgPiAyNikge1xyXG4gICAgICBicmVhZGNydW1iTmF2LmlubmVySFRNTCA9IFwiXCI7IC8vIENsZWFyIHRoZSBicmVhZGNydW1iTmF2XHJcbiAgICAgIGFwcGVuZFJlZHVjZWRCcmVhZGNydW1iSXRlbXMod2luZG93LmxvY2F0aW9uLnBhdGhuYW1lLnNwbGl0KFwiL1wiKS5maWx0ZXIoKHgpID0+IHgpKTtcclxuICAgIH1cclxuICB9LCAzMDApOyAvLyAzMDBtcyBkZWxheVxyXG59XHJcblxyXG5mdW5jdGlvbiBhcHBlbmRCcmVhZGNydW1iSXRlbXMocGF0aG5hbWVzOiBzdHJpbmdbXSkge1xyXG4gIC8vIEFsd2F5cyBhcHBlbmQgdGhlIFwiSG9tZVwiIGJyZWFkY3J1bWIgaXRlbVxyXG4gIGNvbnN0IGhvbWVCcmVhZGNydW1iID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImFcIik7XHJcbiAgaG9tZUJyZWFkY3J1bWIuaHJlZiA9IFwiL1wiO1xyXG4gIGhvbWVCcmVhZGNydW1iLnRleHRDb250ZW50ID0gXCJIb21lXCI7XHJcbiAgYnJlYWRjcnVtYk5hdj8uYXBwZW5kQ2hpbGQoaG9tZUJyZWFkY3J1bWIpO1xyXG5cclxuICBjb25zdCBkaXZpZGVySG9tZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIpO1xyXG4gIGRpdmlkZXJIb21lLmNsYXNzTmFtZSA9IFwiZGl2aWRlclwiO1xyXG4gIGRpdmlkZXJIb21lLmlubmVySFRNTCA9IGA8aSBjbGFzcz1cImZhcyBmYS1jaGV2cm9uLXJpZ2h0XCI+PC9pPmA7XHJcbiAgYnJlYWRjcnVtYk5hdj8uYXBwZW5kQ2hpbGQoZGl2aWRlckhvbWUpO1xyXG5cclxuICBsZXQgZnVsbFBhdGggPSBcIlwiO1xyXG5cclxuICAvLyBJZiB0aGVyZSBhcmUgNSBzZWdtZW50cyBpbiB0aGUgcGF0aCwgcmVtb3ZlIHRoZSBzZWNvbmQgdG8gbGFzdFxyXG4gIGlmIChwYXRobmFtZXMubGVuZ3RoID09PSA1KSB7XHJcbiAgICBwYXRobmFtZXMuc3BsaWNlKC0yLCAxKTtcclxuICB9XHJcblxyXG4gIGZvciAobGV0IGkgPSAwOyBpIDwgcGF0aG5hbWVzLmxlbmd0aDsgaSsrKSB7XHJcbiAgICBjb25zdCBpc0xhc3RJdGVtID0gaSA9PT0gcGF0aG5hbWVzLmxlbmd0aCAtIDE7XHJcbiAgICBmdWxsUGF0aCArPSBcIi9cIiArIHBhdGhuYW1lc1tpXTtcclxuXHJcbiAgICBjb25zdCBkaXNwbGF5TmFtZSA9IGRlY29kZVVSSUNvbXBvbmVudChwYXRobmFtZXNbaV0ucmVwbGFjZShcIi5odG1sXCIsIFwiXCIpKTtcclxuXHJcbiAgICBsZXQgYnJlYWRjcnVtYkl0ZW06IEhUTUxFbGVtZW50O1xyXG4gICAgaWYgKGlzTGFzdEl0ZW0pIHtcclxuICAgICAgYnJlYWRjcnVtYkl0ZW0gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic3BhblwiKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIGJyZWFkY3J1bWJJdGVtID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImFcIik7XHJcbiAgICAgIChicmVhZGNydW1iSXRlbSBhcyBIVE1MQW5jaG9yRWxlbWVudCkuaHJlZiA9IGZ1bGxQYXRoO1xyXG4gICAgfVxyXG5cclxuICAgIGJyZWFkY3J1bWJJdGVtLnRleHRDb250ZW50ID0gZGlzcGxheU5hbWU7XHJcbiAgICBicmVhZGNydW1iTmF2Py5hcHBlbmRDaGlsZChicmVhZGNydW1iSXRlbSk7XHJcblxyXG4gICAgLy8gSWYgbm90IHRoZSBsYXN0IGl0ZW0sIGFwcGVuZCB0aGUgY2hldnJvblxyXG4gICAgaWYgKCFpc0xhc3RJdGVtKSB7XHJcbiAgICAgIGNvbnN0IGRpdmlkZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic3BhblwiKTtcclxuICAgICAgZGl2aWRlci5jbGFzc05hbWUgPSBcImRpdmlkZXJcIjtcclxuICAgICAgZGl2aWRlci5pbm5lckhUTUwgPSBgPGkgY2xhc3M9XCJmYXMgZmEtY2hldnJvbi1yaWdodFwiPjwvaT5gO1xyXG4gICAgICBicmVhZGNydW1iTmF2Py5hcHBlbmRDaGlsZChkaXZpZGVyKTtcclxuICAgIH1cclxuICB9XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGFwcGVuZFJlZHVjZWRCcmVhZGNydW1iSXRlbXMocGF0aG5hbWVzOiBzdHJpbmdbXSkge1xyXG4gIGlmIChwYXRobmFtZXMubGVuZ3RoIDw9IDIpIHJldHVybiBhcHBlbmRCcmVhZGNydW1iSXRlbXMocGF0aG5hbWVzKTtcclxuXHJcbiAgLy8gQXBwZW5kIFwiSG9tZVwiXHJcbiAgY29uc3QgaG9tZUJyZWFkY3J1bWIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiYVwiKTtcclxuICBob21lQnJlYWRjcnVtYi5ocmVmID0gXCIvXCI7XHJcbiAgaG9tZUJyZWFkY3J1bWIudGV4dENvbnRlbnQgPSBcIkhvbWVcIjtcclxuICBicmVhZGNydW1iTmF2Py5hcHBlbmRDaGlsZChob21lQnJlYWRjcnVtYik7XHJcblxyXG4gIC8vIEFwcGVuZCBkaXZpZGVyIGJlZm9yZSBcIi4uLlwiXHJcbiAgY29uc3QgZGl2aWRlckJlZm9yZUVsbGlwc2lzID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInNwYW5cIik7XHJcbiAgZGl2aWRlckJlZm9yZUVsbGlwc2lzLmNsYXNzTmFtZSA9IFwiZGl2aWRlclwiO1xyXG4gIGRpdmlkZXJCZWZvcmVFbGxpcHNpcy5pbm5lckhUTUwgPSBgPGkgY2xhc3M9XCJmYXMgZmEtY2hldnJvbi1yaWdodFwiPjwvaT5gO1xyXG4gIGJyZWFkY3J1bWJOYXY/LmFwcGVuZENoaWxkKGRpdmlkZXJCZWZvcmVFbGxpcHNpcyk7XHJcblxyXG4gIC8vIEFwcGVuZCBcIi4uLlwiXHJcbiAgY29uc3QgZWxsaXBzaXMgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic3BhblwiKTtcclxuICBlbGxpcHNpcy50ZXh0Q29udGVudCA9IFwiLi4uXCI7XHJcbiAgYnJlYWRjcnVtYk5hdj8uYXBwZW5kQ2hpbGQoZWxsaXBzaXMpO1xyXG5cclxuICAvLyBBcHBlbmQgZGl2aWRlciBhZnRlciBcIi4uLlwiXHJcbiAgY29uc3QgZGl2aWRlckFmdGVyRWxsaXBzaXMgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic3BhblwiKTtcclxuICBkaXZpZGVyQWZ0ZXJFbGxpcHNpcy5jbGFzc05hbWUgPSBcImRpdmlkZXJcIjtcclxuICBkaXZpZGVyQWZ0ZXJFbGxpcHNpcy5pbm5lckhUTUwgPSBgPGkgY2xhc3M9XCJmYXMgZmEtY2hldnJvbi1yaWdodFwiPjwvaT5gO1xyXG4gIGJyZWFkY3J1bWJOYXY/LmFwcGVuZENoaWxkKGRpdmlkZXJBZnRlckVsbGlwc2lzKTtcclxuXHJcbiAgLy8gQXBwZW5kIHNlY29uZC10by1sYXN0IGl0ZW0gYXMgYSBsaW5rXHJcbiAgY29uc3Qgc2Vjb25kTGFzdEl0ZW0gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiYVwiKTtcclxuICBzZWNvbmRMYXN0SXRlbS5ocmVmID0gYC8ke3BhdGhuYW1lcy5zbGljZSgwLCAtMSkuam9pbihcIi9cIil9YDtcclxuICBzZWNvbmRMYXN0SXRlbS50ZXh0Q29udGVudCA9IGRlY29kZVVSSUNvbXBvbmVudChwYXRobmFtZXNbcGF0aG5hbWVzLmxlbmd0aCAtIDJdLnJlcGxhY2UoXCIuaHRtbFwiLCBcIlwiKSk7XHJcbiAgYnJlYWRjcnVtYk5hdj8uYXBwZW5kQ2hpbGQoc2Vjb25kTGFzdEl0ZW0pO1xyXG5cclxuICAvLyBBcHBlbmQgZGl2aWRlclxyXG4gIGNvbnN0IGRpdmlkZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic3BhblwiKTtcclxuICBkaXZpZGVyLmNsYXNzTmFtZSA9IFwiZGl2aWRlclwiO1xyXG4gIGRpdmlkZXIuaW5uZXJIVE1MID0gYDxpIGNsYXNzPVwiZmFzIGZhLWNoZXZyb24tcmlnaHRcIj48L2k+YDtcclxuICBicmVhZGNydW1iTmF2Py5hcHBlbmRDaGlsZChkaXZpZGVyKTtcclxuXHJcbiAgLy8gQXBwZW5kIGxhc3QgaXRlbVxyXG4gIGNvbnN0IGxhc3RJdGVtID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInNwYW5cIik7XHJcbiAgbGFzdEl0ZW0udGV4dENvbnRlbnQgPSBkZWNvZGVVUklDb21wb25lbnQocGF0aG5hbWVzW3BhdGhuYW1lcy5sZW5ndGggLSAxXS5yZXBsYWNlKFwiLmh0bWxcIiwgXCJcIikpO1xyXG4gIGJyZWFkY3J1bWJOYXY/LmFwcGVuZENoaWxkKGxhc3RJdGVtKTtcclxufVxyXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///9972\n')},2021:(__unused_webpack_module,exports,__webpack_require__)=>{eval("var __webpack_unused_export__;\n\r\n__webpack_unused_export__ = ({ value: true });\r\nconst breadcrumb_1 = __webpack_require__(9972);\r\n// Breadcrumb\r\n(0, breadcrumb_1.createBreadcrumb)();\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjAyMS5qcyIsIm1hcHBpbmdzIjoiOzs7QUFBQSwrQ0FBZ0Q7QUFFaEQsYUFBYTtBQUNiLGlDQUFnQixHQUFFLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AZXhhbXBsZS9iYXNpY3MvLi9zcmMvVHlwZVNjcmlwdC9jb21wb25lbnRzL0JyZWFkY3J1bWIvaW5kZXgudHM/MGQxMyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjcmVhdGVCcmVhZGNydW1iIH0gZnJvbSBcIi4vYnJlYWRjcnVtYlwiO1xyXG5cclxuLy8gQnJlYWRjcnVtYlxyXG5jcmVhdGVCcmVhZGNydW1iKCk7XHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///2021\n")}},__webpack_module_cache__={};function __webpack_require__(Q){var F=__webpack_module_cache__[Q];if(void 0!==F)return F.exports;var B=__webpack_module_cache__[Q]={exports:{}};return __webpack_modules__[Q](B,B.exports,__webpack_require__),B.exports}var __webpack_exports__=__webpack_require__(2021)})();