(()=>{"use strict";var __webpack_modules__={9972:(__unused_webpack_module,exports)=>{eval('\r\nObject.defineProperty(exports, "__esModule", ({ value: true }));\r\nexports.createBreadcrumb = void 0;\r\nconst breadcrumbNav = document.getElementById("breadcrumbNav");\r\nconst skeletonBreadcrumb = document.createElement("div");\r\nskeletonBreadcrumb.className = "skeleton skeleton-breadcrumb";\r\nlet resizeTimeout = null;\r\nfunction createBreadcrumb() {\r\n    var _a;\r\n    const pathnames = window.location.pathname.split("/").filter((x) => x);\r\n    // If you\'re on the homepage, exit early and remove the parent div if it has class \'c-container\'.\r\n    if (pathnames.length === 0 ||\r\n        (pathnames.length === 1 && (pathnames[0] === "index.html" || pathnames[0] === "index"))) {\r\n        if ((_a = breadcrumbNav === null || breadcrumbNav === void 0 ? void 0 : breadcrumbNav.parentElement) === null || _a === void 0 ? void 0 : _a.classList.contains("c-container")) {\r\n            breadcrumbNav.parentElement.remove();\r\n        }\r\n        return;\r\n    }\r\n    // Append the skeleton breadcrumb as a placeholder\r\n    breadcrumbNav === null || breadcrumbNav === void 0 ? void 0 : breadcrumbNav.appendChild(skeletonBreadcrumb);\r\n    // Use a promise to delay checking of wrapping\r\n    Promise.resolve().then(() => {\r\n        // Check if wrapping occurred\r\n        const afterAppendHeight = (breadcrumbNav === null || breadcrumbNav === void 0 ? void 0 : breadcrumbNav.offsetHeight) || 0;\r\n        if (afterAppendHeight > 30) {\r\n            breadcrumbNav.innerHTML = ""; // Clear the breadcrumbNav\r\n            appendReducedBreadcrumbItems(pathnames);\r\n        }\r\n        else {\r\n            breadcrumbNav.removeChild(skeletonBreadcrumb); // Remove the skeleton breadcrumb\r\n        }\r\n    });\r\n    window.addEventListener("resize", handleResize);\r\n}\r\nexports.createBreadcrumb = createBreadcrumb;\r\nfunction handleResize() {\r\n    // If there\'s an existing timeout, clear it\r\n    if (resizeTimeout !== null) {\r\n        clearTimeout(resizeTimeout);\r\n    }\r\n    // Set a new timeout\r\n    resizeTimeout = setTimeout(() => {\r\n        const afterAppendHeight = (breadcrumbNav === null || breadcrumbNav === void 0 ? void 0 : breadcrumbNav.offsetHeight) || 0;\r\n        if (afterAppendHeight > 26) {\r\n            breadcrumbNav.innerHTML = ""; // Clear the breadcrumbNav\r\n            appendReducedBreadcrumbItems(window.location.pathname.split("/").filter((x) => x));\r\n        }\r\n    }, 300); // 300ms delay\r\n}\r\nfunction appendBreadcrumbItems(pathnames) {\r\n    // Always append the "Home" breadcrumb item\r\n    const homeBreadcrumb = document.createElement("a");\r\n    homeBreadcrumb.href = "/";\r\n    homeBreadcrumb.textContent = "Home";\r\n    breadcrumbNav === null || breadcrumbNav === void 0 ? void 0 : breadcrumbNav.appendChild(homeBreadcrumb);\r\n    const dividerHome = document.createElement("span");\r\n    dividerHome.className = "divider";\r\n    dividerHome.innerHTML = `<i class="fas fa-chevron-right"></i>`;\r\n    breadcrumbNav === null || breadcrumbNav === void 0 ? void 0 : breadcrumbNav.appendChild(dividerHome);\r\n    let fullPath = "";\r\n    // If there are 5 segments in the path, remove the second to last\r\n    if (pathnames.length === 5) {\r\n        pathnames.splice(-2, 1);\r\n    }\r\n    for (let i = 0; i < pathnames.length; i++) {\r\n        const isLastItem = i === pathnames.length - 1;\r\n        fullPath += "/" + pathnames[i];\r\n        const displayName = decodeURIComponent(pathnames[i].replace(".html", ""));\r\n        let breadcrumbItem;\r\n        if (isLastItem) {\r\n            breadcrumbItem = document.createElement("span");\r\n        }\r\n        else {\r\n            breadcrumbItem = document.createElement("a");\r\n            breadcrumbItem.href = fullPath;\r\n        }\r\n        breadcrumbItem.textContent = displayName;\r\n        breadcrumbNav === null || breadcrumbNav === void 0 ? void 0 : breadcrumbNav.appendChild(breadcrumbItem);\r\n        // If not the last item, append the chevron\r\n        if (!isLastItem) {\r\n            const divider = document.createElement("span");\r\n            divider.className = "divider";\r\n            divider.innerHTML = `<i class="fas fa-chevron-right"></i>`;\r\n            breadcrumbNav === null || breadcrumbNav === void 0 ? void 0 : breadcrumbNav.appendChild(divider);\r\n        }\r\n    }\r\n}\r\nfunction appendReducedBreadcrumbItems(pathnames) {\r\n    if (pathnames.length <= 2)\r\n        return appendBreadcrumbItems(pathnames);\r\n    // Append "Home"\r\n    const homeBreadcrumb = document.createElement("a");\r\n    homeBreadcrumb.href = "/";\r\n    homeBreadcrumb.textContent = "Home";\r\n    breadcrumbNav === null || breadcrumbNav === void 0 ? void 0 : breadcrumbNav.appendChild(homeBreadcrumb);\r\n    // Append divider before "..."\r\n    const dividerBeforeEllipsis = document.createElement("span");\r\n    dividerBeforeEllipsis.className = "divider";\r\n    dividerBeforeEllipsis.innerHTML = `<i class="fas fa-chevron-right"></i>`;\r\n    breadcrumbNav === null || breadcrumbNav === void 0 ? void 0 : breadcrumbNav.appendChild(dividerBeforeEllipsis);\r\n    // Append "..."\r\n    const ellipsis = document.createElement("span");\r\n    ellipsis.textContent = "...";\r\n    breadcrumbNav === null || breadcrumbNav === void 0 ? void 0 : breadcrumbNav.appendChild(ellipsis);\r\n    // Append divider after "..."\r\n    const dividerAfterEllipsis = document.createElement("span");\r\n    dividerAfterEllipsis.className = "divider";\r\n    dividerAfterEllipsis.innerHTML = `<i class="fas fa-chevron-right"></i>`;\r\n    breadcrumbNav === null || breadcrumbNav === void 0 ? void 0 : breadcrumbNav.appendChild(dividerAfterEllipsis);\r\n    // Append second-to-last item as a link\r\n    const secondLastItem = document.createElement("a");\r\n    secondLastItem.href = `/${pathnames.slice(0, -1).join("/")}`;\r\n    secondLastItem.textContent = decodeURIComponent(pathnames[pathnames.length - 2].replace(".html", ""));\r\n    breadcrumbNav === null || breadcrumbNav === void 0 ? void 0 : breadcrumbNav.appendChild(secondLastItem);\r\n    // Append divider\r\n    const divider = document.createElement("span");\r\n    divider.className = "divider";\r\n    divider.innerHTML = `<i class="fas fa-chevron-right"></i>`;\r\n    breadcrumbNav === null || breadcrumbNav === void 0 ? void 0 : breadcrumbNav.appendChild(divider);\r\n    // Append last item\r\n    const lastItem = document.createElement("span");\r\n    lastItem.textContent = decodeURIComponent(pathnames[pathnames.length - 1].replace(".html", ""));\r\n    breadcrumbNav === null || breadcrumbNav === void 0 ? void 0 : breadcrumbNav.appendChild(lastItem);\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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O0lBQzNELGFBQWEsYUFBYixhQUFhLHVCQUFiLGFBQWEsQ0FBRSxXQUFXLENBQUMsT0FBTyxDQUFDLENBQUM7SUFFcEMsbUJBQW1CO0lBQ25CLE1BQU0sUUFBUSxHQUFHLFFBQVEsQ0FBQyxhQUFhLENBQUMsTUFBTSxDQUFDLENBQUM7SUFDaEQsUUFBUSxDQUFDLFdBQVcsR0FBRyxrQkFBa0IsQ0FBQyxTQUFTLENBQUMsU0FBUyxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUMsQ0FBQyxPQUFPLENBQUMsT0FBTyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUM7SUFDaEcsYUFBYSxhQUFiLGFBQWEsdUJBQWIsYUFBYSxDQUFFLFdBQVcsQ0FBQyxRQUFRLENBQUMsQ0FBQztBQUN2QyxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQGV4YW1wbGUvYmFzaWNzLy4vc3JjL1R5cGVTY3JpcHQvY29tcG9uZW50cy9CcmVhZGNydW1iL2JyZWFkY3J1bWIudHM/ZmJhYiJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBicmVhZGNydW1iTmF2ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJicmVhZGNydW1iTmF2XCIpO1xyXG5jb25zdCBza2VsZXRvbkJyZWFkY3J1bWIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xyXG5za2VsZXRvbkJyZWFkY3J1bWIuY2xhc3NOYW1lID0gXCJza2VsZXRvbiBza2VsZXRvbi1icmVhZGNydW1iXCI7XHJcblxyXG5sZXQgcmVzaXplVGltZW91dDogUmV0dXJuVHlwZTx0eXBlb2Ygc2V0VGltZW91dD4gfCBudWxsID0gbnVsbDtcclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVCcmVhZGNydW1iKCkge1xyXG4gIGNvbnN0IHBhdGhuYW1lcyA9IHdpbmRvdy5sb2NhdGlvbi5wYXRobmFtZS5zcGxpdChcIi9cIikuZmlsdGVyKCh4KSA9PiB4KTtcclxuXHJcbiAgLy8gSWYgeW91J3JlIG9uIHRoZSBob21lcGFnZSwgZXhpdCBlYXJseSBhbmQgcmVtb3ZlIHRoZSBwYXJlbnQgZGl2IGlmIGl0IGhhcyBjbGFzcyAnYy1jb250YWluZXInLlxyXG4gIGlmIChcclxuICAgIHBhdGhuYW1lcy5sZW5ndGggPT09IDAgfHxcclxuICAgIChwYXRobmFtZXMubGVuZ3RoID09PSAxICYmIChwYXRobmFtZXNbMF0gPT09IFwiaW5kZXguaHRtbFwiIHx8IHBhdGhuYW1lc1swXSA9PT0gXCJpbmRleFwiKSlcclxuICApIHtcclxuICAgIGlmIChicmVhZGNydW1iTmF2Py5wYXJlbnRFbGVtZW50Py5jbGFzc0xpc3QuY29udGFpbnMoXCJjLWNvbnRhaW5lclwiKSkge1xyXG4gICAgICBicmVhZGNydW1iTmF2LnBhcmVudEVsZW1lbnQucmVtb3ZlKCk7XHJcbiAgICB9XHJcbiAgICByZXR1cm47XHJcbiAgfVxyXG5cclxuICAvLyBBcHBlbmQgdGhlIHNrZWxldG9uIGJyZWFkY3J1bWIgYXMgYSBwbGFjZWhvbGRlclxyXG4gIGJyZWFkY3J1bWJOYXY/LmFwcGVuZENoaWxkKHNrZWxldG9uQnJlYWRjcnVtYik7XHJcblxyXG4gIC8vIFVzZSBhIHByb21pc2UgdG8gZGVsYXkgY2hlY2tpbmcgb2Ygd3JhcHBpbmdcclxuICBQcm9taXNlLnJlc29sdmUoKS50aGVuKCgpID0+IHtcclxuICAgIC8vIENoZWNrIGlmIHdyYXBwaW5nIG9jY3VycmVkXHJcbiAgICBjb25zdCBhZnRlckFwcGVuZEhlaWdodCA9IGJyZWFkY3J1bWJOYXY/Lm9mZnNldEhlaWdodCB8fCAwO1xyXG5cclxuICAgIGlmIChhZnRlckFwcGVuZEhlaWdodCA+IDMwKSB7XHJcbiAgICAgIGJyZWFkY3J1bWJOYXYuaW5uZXJIVE1MID0gXCJcIjsgLy8gQ2xlYXIgdGhlIGJyZWFkY3J1bWJOYXZcclxuICAgICAgYXBwZW5kUmVkdWNlZEJyZWFkY3J1bWJJdGVtcyhwYXRobmFtZXMpO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgYnJlYWRjcnVtYk5hdi5yZW1vdmVDaGlsZChza2VsZXRvbkJyZWFkY3J1bWIpOyAvLyBSZW1vdmUgdGhlIHNrZWxldG9uIGJyZWFkY3J1bWJcclxuICAgIH1cclxuICB9KTtcclxuXHJcbiAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJyZXNpemVcIiwgaGFuZGxlUmVzaXplKTtcclxufVxyXG5cclxuZnVuY3Rpb24gaGFuZGxlUmVzaXplKCkge1xyXG4gIC8vIElmIHRoZXJlJ3MgYW4gZXhpc3RpbmcgdGltZW91dCwgY2xlYXIgaXRcclxuICBpZiAocmVzaXplVGltZW91dCAhPT0gbnVsbCkge1xyXG4gICAgY2xlYXJUaW1lb3V0KHJlc2l6ZVRpbWVvdXQpO1xyXG4gIH1cclxuXHJcbiAgLy8gU2V0IGEgbmV3IHRpbWVvdXRcclxuICByZXNpemVUaW1lb3V0ID0gc2V0VGltZW91dCgoKSA9PiB7XHJcbiAgICBjb25zdCBhZnRlckFwcGVuZEhlaWdodCA9IGJyZWFkY3J1bWJOYXY/Lm9mZnNldEhlaWdodCB8fCAwO1xyXG5cclxuICAgIGlmIChhZnRlckFwcGVuZEhlaWdodCA+IDI2KSB7XHJcbiAgICAgIGJyZWFkY3J1bWJOYXYuaW5uZXJIVE1MID0gXCJcIjsgLy8gQ2xlYXIgdGhlIGJyZWFkY3J1bWJOYXZcclxuICAgICAgYXBwZW5kUmVkdWNlZEJyZWFkY3J1bWJJdGVtcyh3aW5kb3cubG9jYXRpb24ucGF0aG5hbWUuc3BsaXQoXCIvXCIpLmZpbHRlcigoeCkgPT4geCkpO1xyXG4gICAgfVxyXG4gIH0sIDMwMCk7IC8vIDMwMG1zIGRlbGF5XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGFwcGVuZEJyZWFkY3J1bWJJdGVtcyhwYXRobmFtZXM6IHN0cmluZ1tdKSB7XHJcbiAgLy8gQWx3YXlzIGFwcGVuZCB0aGUgXCJIb21lXCIgYnJlYWRjcnVtYiBpdGVtXHJcbiAgY29uc3QgaG9tZUJyZWFkY3J1bWIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiYVwiKTtcclxuICBob21lQnJlYWRjcnVtYi5ocmVmID0gXCIvXCI7XHJcbiAgaG9tZUJyZWFkY3J1bWIudGV4dENvbnRlbnQgPSBcIkhvbWVcIjtcclxuICBicmVhZGNydW1iTmF2Py5hcHBlbmRDaGlsZChob21lQnJlYWRjcnVtYik7XHJcblxyXG4gIGNvbnN0IGRpdmlkZXJIb21lID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInNwYW5cIik7XHJcbiAgZGl2aWRlckhvbWUuY2xhc3NOYW1lID0gXCJkaXZpZGVyXCI7XHJcbiAgZGl2aWRlckhvbWUuaW5uZXJIVE1MID0gYDxpIGNsYXNzPVwiZmFzIGZhLWNoZXZyb24tcmlnaHRcIj48L2k+YDtcclxuICBicmVhZGNydW1iTmF2Py5hcHBlbmRDaGlsZChkaXZpZGVySG9tZSk7XHJcblxyXG4gIGxldCBmdWxsUGF0aCA9IFwiXCI7XHJcblxyXG4gIC8vIElmIHRoZXJlIGFyZSA1IHNlZ21lbnRzIGluIHRoZSBwYXRoLCByZW1vdmUgdGhlIHNlY29uZCB0byBsYXN0XHJcbiAgaWYgKHBhdGhuYW1lcy5sZW5ndGggPT09IDUpIHtcclxuICAgIHBhdGhuYW1lcy5zcGxpY2UoLTIsIDEpO1xyXG4gIH1cclxuXHJcbiAgZm9yIChsZXQgaSA9IDA7IGkgPCBwYXRobmFtZXMubGVuZ3RoOyBpKyspIHtcclxuICAgIGNvbnN0IGlzTGFzdEl0ZW0gPSBpID09PSBwYXRobmFtZXMubGVuZ3RoIC0gMTtcclxuICAgIGZ1bGxQYXRoICs9IFwiL1wiICsgcGF0aG5hbWVzW2ldO1xyXG5cclxuICAgIGNvbnN0IGRpc3BsYXlOYW1lID0gZGVjb2RlVVJJQ29tcG9uZW50KHBhdGhuYW1lc1tpXS5yZXBsYWNlKFwiLmh0bWxcIiwgXCJcIikpO1xyXG5cclxuICAgIGxldCBicmVhZGNydW1iSXRlbTogSFRNTEVsZW1lbnQ7XHJcbiAgICBpZiAoaXNMYXN0SXRlbSkge1xyXG4gICAgICBicmVhZGNydW1iSXRlbSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIpO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgYnJlYWRjcnVtYkl0ZW0gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiYVwiKTtcclxuICAgICAgKGJyZWFkY3J1bWJJdGVtIGFzIEhUTUxBbmNob3JFbGVtZW50KS5ocmVmID0gZnVsbFBhdGg7XHJcbiAgICB9XHJcblxyXG4gICAgYnJlYWRjcnVtYkl0ZW0udGV4dENvbnRlbnQgPSBkaXNwbGF5TmFtZTtcclxuICAgIGJyZWFkY3J1bWJOYXY/LmFwcGVuZENoaWxkKGJyZWFkY3J1bWJJdGVtKTtcclxuXHJcbiAgICAvLyBJZiBub3QgdGhlIGxhc3QgaXRlbSwgYXBwZW5kIHRoZSBjaGV2cm9uXHJcbiAgICBpZiAoIWlzTGFzdEl0ZW0pIHtcclxuICAgICAgY29uc3QgZGl2aWRlciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIpO1xyXG4gICAgICBkaXZpZGVyLmNsYXNzTmFtZSA9IFwiZGl2aWRlclwiO1xyXG4gICAgICBkaXZpZGVyLmlubmVySFRNTCA9IGA8aSBjbGFzcz1cImZhcyBmYS1jaGV2cm9uLXJpZ2h0XCI+PC9pPmA7XHJcbiAgICAgIGJyZWFkY3J1bWJOYXY/LmFwcGVuZENoaWxkKGRpdmlkZXIpO1xyXG4gICAgfVxyXG4gIH1cclxufVxyXG5cclxuZnVuY3Rpb24gYXBwZW5kUmVkdWNlZEJyZWFkY3J1bWJJdGVtcyhwYXRobmFtZXM6IHN0cmluZ1tdKSB7XHJcbiAgaWYgKHBhdGhuYW1lcy5sZW5ndGggPD0gMikgcmV0dXJuIGFwcGVuZEJyZWFkY3J1bWJJdGVtcyhwYXRobmFtZXMpO1xyXG5cclxuICAvLyBBcHBlbmQgXCJIb21lXCJcclxuICBjb25zdCBob21lQnJlYWRjcnVtYiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJhXCIpO1xyXG4gIGhvbWVCcmVhZGNydW1iLmhyZWYgPSBcIi9cIjtcclxuICBob21lQnJlYWRjcnVtYi50ZXh0Q29udGVudCA9IFwiSG9tZVwiO1xyXG4gIGJyZWFkY3J1bWJOYXY/LmFwcGVuZENoaWxkKGhvbWVCcmVhZGNydW1iKTtcclxuXHJcbiAgLy8gQXBwZW5kIGRpdmlkZXIgYmVmb3JlIFwiLi4uXCJcclxuICBjb25zdCBkaXZpZGVyQmVmb3JlRWxsaXBzaXMgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic3BhblwiKTtcclxuICBkaXZpZGVyQmVmb3JlRWxsaXBzaXMuY2xhc3NOYW1lID0gXCJkaXZpZGVyXCI7XHJcbiAgZGl2aWRlckJlZm9yZUVsbGlwc2lzLmlubmVySFRNTCA9IGA8aSBjbGFzcz1cImZhcyBmYS1jaGV2cm9uLXJpZ2h0XCI+PC9pPmA7XHJcbiAgYnJlYWRjcnVtYk5hdj8uYXBwZW5kQ2hpbGQoZGl2aWRlckJlZm9yZUVsbGlwc2lzKTtcclxuXHJcbiAgLy8gQXBwZW5kIFwiLi4uXCJcclxuICBjb25zdCBlbGxpcHNpcyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIpO1xyXG4gIGVsbGlwc2lzLnRleHRDb250ZW50ID0gXCIuLi5cIjtcclxuICBicmVhZGNydW1iTmF2Py5hcHBlbmRDaGlsZChlbGxpcHNpcyk7XHJcblxyXG4gIC8vIEFwcGVuZCBkaXZpZGVyIGFmdGVyIFwiLi4uXCJcclxuICBjb25zdCBkaXZpZGVyQWZ0ZXJFbGxpcHNpcyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIpO1xyXG4gIGRpdmlkZXJBZnRlckVsbGlwc2lzLmNsYXNzTmFtZSA9IFwiZGl2aWRlclwiO1xyXG4gIGRpdmlkZXJBZnRlckVsbGlwc2lzLmlubmVySFRNTCA9IGA8aSBjbGFzcz1cImZhcyBmYS1jaGV2cm9uLXJpZ2h0XCI+PC9pPmA7XHJcbiAgYnJlYWRjcnVtYk5hdj8uYXBwZW5kQ2hpbGQoZGl2aWRlckFmdGVyRWxsaXBzaXMpO1xyXG5cclxuICAvLyBBcHBlbmQgc2Vjb25kLXRvLWxhc3QgaXRlbSBhcyBhIGxpbmtcclxuICBjb25zdCBzZWNvbmRMYXN0SXRlbSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJhXCIpO1xyXG4gIHNlY29uZExhc3RJdGVtLmhyZWYgPSBgLyR7cGF0aG5hbWVzLnNsaWNlKDAsIC0xKS5qb2luKFwiL1wiKX1gO1xyXG4gIHNlY29uZExhc3RJdGVtLnRleHRDb250ZW50ID0gZGVjb2RlVVJJQ29tcG9uZW50KHBhdGhuYW1lc1twYXRobmFtZXMubGVuZ3RoIC0gMl0ucmVwbGFjZShcIi5odG1sXCIsIFwiXCIpKTtcclxuICBicmVhZGNydW1iTmF2Py5hcHBlbmRDaGlsZChzZWNvbmRMYXN0SXRlbSk7XHJcblxyXG4gIC8vIEFwcGVuZCBkaXZpZGVyXHJcbiAgY29uc3QgZGl2aWRlciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIpO1xyXG4gIGRpdmlkZXIuY2xhc3NOYW1lID0gXCJkaXZpZGVyXCI7XHJcbiAgZGl2aWRlci5pbm5lckhUTUwgPSBgPGkgY2xhc3M9XCJmYXMgZmEtY2hldnJvbi1yaWdodFwiPjwvaT5gO1xyXG4gIGJyZWFkY3J1bWJOYXY/LmFwcGVuZENoaWxkKGRpdmlkZXIpO1xyXG5cclxuICAvLyBBcHBlbmQgbGFzdCBpdGVtXHJcbiAgY29uc3QgbGFzdEl0ZW0gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic3BhblwiKTtcclxuICBsYXN0SXRlbS50ZXh0Q29udGVudCA9IGRlY29kZVVSSUNvbXBvbmVudChwYXRobmFtZXNbcGF0aG5hbWVzLmxlbmd0aCAtIDFdLnJlcGxhY2UoXCIuaHRtbFwiLCBcIlwiKSk7XHJcbiAgYnJlYWRjcnVtYk5hdj8uYXBwZW5kQ2hpbGQobGFzdEl0ZW0pO1xyXG59XHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///9972\n')},2021:(__unused_webpack_module,exports,__webpack_require__)=>{eval("var __webpack_unused_export__;\n\r\n__webpack_unused_export__ = ({ value: true });\r\nconst breadcrumb_1 = __webpack_require__(9972);\r\n// Breadcrumb\r\n(0, breadcrumb_1.createBreadcrumb)();\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjAyMS5qcyIsIm1hcHBpbmdzIjoiOzs7QUFBQSwrQ0FBZ0Q7QUFFaEQsYUFBYTtBQUNiLGlDQUFnQixHQUFFLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AZXhhbXBsZS9iYXNpY3MvLi9zcmMvVHlwZVNjcmlwdC9jb21wb25lbnRzL0JyZWFkY3J1bWIvaW5kZXgudHM/MGQxMyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjcmVhdGVCcmVhZGNydW1iIH0gZnJvbSBcIi4vYnJlYWRjcnVtYlwiO1xyXG5cclxuLy8gQnJlYWRjcnVtYlxyXG5jcmVhdGVCcmVhZGNydW1iKCk7XHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///2021\n")}},__webpack_module_cache__={};function __webpack_require__(Q){var F=__webpack_module_cache__[Q];if(void 0!==F)return F.exports;var B=__webpack_module_cache__[Q]={exports:{}};return __webpack_modules__[Q](B,B.exports,__webpack_require__),B.exports}var __webpack_exports__=__webpack_require__(2021)})();